{
  "numFailedTestSuites": 1,
  "numFailedTests": 4,
  "numPassedTestSuites": 0,
  "numPassedTests": 21,
  "numPendingTestSuites": 0,
  "numPendingTests": 1,
  "numRuntimeErrorTestSuites": 0,
  "numTodoTests": 0,
  "numTotalTestSuites": 1,
  "numTotalTests": 26,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesRemovedList": [],
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1584444207829,
  "success": false,
  "testResults": [
    {
      "leaks": false,
      "numFailingTests": 4,
      "numPassingTests": 21,
      "numPendingTests": 1,
      "numTodoTests": 0,
      "openHandles": [],
      "perfStats": {
        "end": 1584444208115,
        "start": 1584444207854
      },
      "skipped": false,
      "snapshot": {
        "added": 0,
        "fileDeleted": false,
        "matched": 0,
        "unchecked": 0,
        "unmatched": 0,
        "updated": 0,
        "uncheckedKeys": []
      },
      "testFilePath": "/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js",
      "testResults": [
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 2,
          "failureMessages": [
            "TypeError: Cannot read property 'name' of undefined\n    at Object.<anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:28:91)\n    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)"
          ],
          "fullName": "Transfer Service Should fail",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "Should fail"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 12,
          "failureMessages": [],
          "fullName": "Transfer Service Should throw exception",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "Should throw exception"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "Transfer Service When user is deleted, should not approve the transfer",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When user is deleted, should not approve the transfer"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "Transfer Service When user has no credit, should not approve the transfer",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When user has no credit, should not approve the transfer"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 4,
          "failureMessages": [],
          "fullName": "Transfer Service When receiver lives in forbidden country, should not approve the transfer",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When receiver lives in forbidden country, should not approve the transfer"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 6,
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:81:18)\n    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)"
          ],
          "fullName": "Transfer Service When no sender specified, should throw invalid details error",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "When no sender specified, should throw invalid details error"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 2,
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:86:18)\n    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)"
          ],
          "fullName": "Transfer Service When no receiver specified, should throw invalid details error",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "When no receiver specified, should throw invalid details error"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "Transfer Service When no bank specified, should throw invalid details error",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When no bank specified, should throw invalid details error"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "Transfer Service When user did not confirm his account, should not approve the transfer",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When user did not confirm his account, should not approve the transfer"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "Transfer Service When user has enough credit, should approve the transfer",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When user has enough credit, should approve the transfer"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "Transfer Service When transfer is successful, should send mail to receiver",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When transfer is successful, should send mail to receiver"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "Transfer Service When transfer is successful, receiver balance should get topped up",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When transfer is successful, receiver balance should get topped up"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 3,
          "failureMessages": [
            "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at Object.<anonymous> (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/src/test/transfer-service-test-start.js:117:18)\n    at Object.asyncJestTest (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:100:37)\n    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:43:12\n    at new Promise (<anonymous>)\n    at mapper (/Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at /Users/yonigoldberg/Solutions/testing-workshop/clean-testing/node_modules/jest-jasmine2/build/queueRunner.js:73:41\n    at processTicksAndRejections (internal/process/task_queues.js:93:5)"
          ],
          "fullName": "Transfer Service When no amount specified, should throw invalid details error",
          "location": null,
          "numPassingAsserts": 0,
          "status": "failed",
          "title": "When no amount specified, should throw invalid details error"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "Transfer Service When sender is from Italy and transfer is valid, then should be approved",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When sender is from Italy and transfer is valid, then should be approved"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "Transfer Service When sender is from US and transfer is valid, then should be approved",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When sender is from US and transfer is valid, then should be approved"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "Transfer Service When sender is from Uruguay and transfer is valid, then should be approved",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When sender is from Uruguay and transfer is valid, then should be approved"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "Transfer Service When sender is from Germany and transfer is valid, then should be approved",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When sender is from Germany and transfer is valid, then should be approved"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "Transfer Service When sender is from Russia and transfer is valid, then should be approved",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When sender is from Russia and transfer is valid, then should be approved"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "Transfer Service When sender is from India and transfer is valid, then should be approved",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When sender is from India and transfer is valid, then should be approved"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "Transfer Service When transfer is with different currency, receiver gets using his own currency",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When transfer is with different currency, receiver gets using his own currency"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 3,
          "failureMessages": [],
          "fullName": "Transfer Service When sender from Italy sends a valid payment, transfer is approved",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When sender from Italy sends a valid payment, transfer is approved"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "Transfer Service When sender from India sends a valid payment, transfer is approved",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When sender from India sends a valid payment, transfer is approved"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "Transfer Service When sender from US sends a valid payment, transfer is approved",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When sender from US sends a valid payment, transfer is approved"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "Transfer Service When sender from Germany sends a valid payment, transfer is approved",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When sender from Germany sends a valid payment, transfer is approved"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 2,
          "failureMessages": [],
          "fullName": "Transfer Service When sender from Argentina sends a valid payment, transfer is approved",
          "location": null,
          "numPassingAsserts": 0,
          "status": "passed",
          "title": "When sender from Argentina sends a valid payment, transfer is approved"
        },
        {
          "ancestorTitles": [
            "Transfer Service"
          ],
          "duration": 0,
          "failureMessages": [],
          "fullName": "Transfer Service When trying to exceed credit, transfer doesnt appear in user history",
          "location": null,
          "numPassingAsserts": 0,
          "status": "pending",
          "title": "When trying to exceed credit, transfer doesnt appear in user history"
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTransfer Service › Should fail\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'name' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m    \u001b[36mconst\u001b[39m unauthorizedTransferToAdd \u001b[33m=\u001b[39m testHelpers\u001b[33m.\u001b[39mfactorMoneyTransfer({})\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m    \u001b[36mconst\u001b[39m transferResponse \u001b[33m=\u001b[39m serviceUnderTest\u001b[33m.\u001b[39mtransfer(fromWhomUser\u001b[33m,\u001b[39m {}\u001b[33m,\u001b[39m \u001b[35m110\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Bank of America'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 28 | \u001b[39m    \u001b[36mconst\u001b[39m allUserTransfers \u001b[33m=\u001b[39m serviceUnderTest\u001b[33m.\u001b[39mgetTransfers(unauthorizedTransferToAdd\u001b[33m.\u001b[39muser\u001b[33m.\u001b[39mname)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m    expect(transferResponse\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'declined'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m    expect(serviceUnderTest\u001b[33m.\u001b[39mlastOneApproved)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/transfer-service-test-start.js\u001b[39m\u001b[0m\u001b[2m:28:91)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTransfer Service › When no sender specified, should throw invalid details error\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 79 | \u001b[39m  test(\u001b[32m'When no sender specified, should throw invalid details error'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 80 | \u001b[39m    \u001b[90m// This test is here only to exemplify how big test reports look like\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 81 | \u001b[39m    expect(\u001b[36mtrue\u001b[39m)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 82 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 83 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 | \u001b[39m  test(\u001b[32m'When no receiver specified, should throw invalid details error'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/transfer-service-test-start.js\u001b[39m\u001b[0m\u001b[2m:81:18)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTransfer Service › When no receiver specified, should throw invalid details error\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 84 | \u001b[39m  test(\u001b[32m'When no receiver specified, should throw invalid details error'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 85 | \u001b[39m    \u001b[90m// This test is here only to exemplify how big test reports look like\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 86 | \u001b[39m    expect(\u001b[36mtrue\u001b[39m)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 87 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 88 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 89 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/transfer-service-test-start.js\u001b[39m\u001b[0m\u001b[2m:86:18)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mTransfer Service › When no amount specified, should throw invalid details error\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mfalse\u001b[39m\n    Received: \u001b[31mtrue\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 115 | \u001b[39m  test(\u001b[32m'When no amount specified, should throw invalid details error'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 116 | \u001b[39m    \u001b[90m// This test is here only to exemplify how big test reports look like\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 117 | \u001b[39m    expect(\u001b[36mtrue\u001b[39m)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m     | \u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 118 | \u001b[39m  })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 119 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 120 | \u001b[39m  test\u001b[33m.\u001b[39meach(testHelpers\u001b[33m.\u001b[39mgetSupportedCountries())(\u001b[32m'When sender is from %s and transfer is valid, then should be approved'\u001b[39m\u001b[33m,\u001b[39m (country) \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/test/transfer-service-test-start.js\u001b[39m\u001b[0m\u001b[2m:117:18)\u001b[22m\u001b[2m\u001b[22m\n"
    }
  ],
  "wasInterrupted": false
}