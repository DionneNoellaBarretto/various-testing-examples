describe.skip('', () => {
    test('Should check if new post is saved correctly', () => {
        //Arrange
        const validationMock = sinon.mock(validator , 'validate');
        const blogRepositoryMock = sinon.mock(dataAccess, 'save');
        const loggerMock = sinon.mock(logger, 'log');
        //Act
        const addResponse = new blogService.add({title: 'How I made 5B$ in 24 hours'});
        //Assert
        expect(validationMock.calledOnceWith({
            title: 'How I made 5B$ in 24 hours'
        }));
        expect(blogRepositoryMock.calledOnceWith({
            title: 'How I made 5B$ in 24 hours'
        }));
        expect(loggerMock.calledOnceWith('A new blog is saved now'));
        expect(addResponse).toBeTruthy();
    });
});